
#===============================================================================
# Variable Definitions
#===============================================================================

NC_ROOT = /opt/netcdf/4.6.1/INTEL
MKL_ROOT = /opt/intel/2019_up3/mkl
FFTW_ROOT = /home/Christopher.Dupuis/fftw/intel

NC_LIBDIR = ${NC_ROOT}/lib64
NC_INCDIR = ${NC_ROOT}/include
MKL_LIBDIR = ${MKL_ROOT}/lib/intel64
MKL_INCDIR = ${MKL_ROOT}/include
FFTW_LIBDIR = ${FFTW_ROOT}/lib
FFTW_INCDIR = ${FFTW_ROOT}/include

CXX := icpc
OPENMP_FLAG := -qopenmp
OPENMP_LIB := -liomp5

LDLIBS :=                                                                      \
	-L${MKL_LIBDIR}                                                            \
	-L${FFTW_LIBDIR}

LDFLAGS :=                                                                     \
	-Wl,-rpath=${MKL_LIBDIR}                                                   \
	-Wl,-rpath=${FFTW_LIBDIR}

LINALG_FLAGS :=                                                                \
	-I${MKL_INCDIR}

MKL_LIBS :=                                                                    \
	-lmkl_intel_lp64                                                           \
	-lmkl_intel_thread                                                         \
	-lmkl_core

ifdef with_plasma

	LINALG_FLAGS +=                                                            \
		-I${PLASMA_INCDIR}                                                     \
		-L${PLASMA_LIBDIR}

	PLASMA_LIBS :=                                                             \
		-lplasma                                                               \
		-lcoreblasqw                                                           \
		-lcoreblas

	LINALG_LIBS :=                                                             \
		${PLASMA_LIBS}                                                         \
		${MKL_LIBS}                                                            \
		-lquark                                                                \
		-lifport                                                               \
		-lifcoremt                                                             \
		-limf                                                                  \
		-lsvml                                                                 \
		-lirc

	CMP_FLAG :=                                                                \
		-DWITH_PLASMA

else
	LINALG_FLAGS +=                                                            \
		-DMKL_Complex8="std::complex<float>"                                   \
		-DMKL_Complex16="std::complex<double>"

	PLASMA_LIBS :=

	LINALG_LIBS :=                                                             \
		${MKL_LIBS}                                                            \
		-lifport                                                               \
		-lifcoremt                                                             \
		-limf                                                                  \
		-lsvml                                                                 \
		-lirc

	CMP_FLAG :=                                                                \
		-DWITH_MKL

endif

FFTW_FLAGS :=                                                                  \
	-I${FFTW_INCDIR}                                                           \
	-L${FFTW_LIBDIR}

FFTW_LIBS :=                                                                   \
	-lfftw3f                                                                   \
	-lm

NC_FLAGS :=                                                                    \
	-I${NC_INCDIR}                                                             \
	-L${NC_LIBDIR}

NETCDF_FLAGS :=                                                                \
	${NC_FLAGS}

NETCDF_LIBS :=                                                                 \
	-lnetcdf

FLAGS := ${CXXFLAGS} -Wall -Wextra -std=c++11 -Isrc/ -Isrc/linalg ${LDFLAGS} ${NETCDF_FLAGS} ${OPENMP_FLAG} ${LINALG_FLAGS} ${FFTW_FLAGS} ${CMP_FLAG}
LIBS := ${LDLIBS} ${NETCDF_LIBS} ${LINALG_LIBS} ${FFTW_LIBS} ${OPENMP_LIB}
PROD := -O2
DB := ${DBFLAGS} -O0 -g -DDEBUG

HPP_SOURCE := src/*.hpp
CPP_SOURCE := src/*.cpp main.cpp
TPP_SOURCE := src/*.tpp

ifdef with_plasma
LINALG_HPP_SOURCE := linalg/plasma_svd.hpp
LINALG_TPP_SOURCE := linalg/plasma_svd.tpp
else
LINALG_HPP_SOURCE := linalg/mkl_svd.hpp
LINALG_TPP_SOURCE := linalg/mkl_svd.tpp
endif

ALL_SOURCE := ${HPP_SOURCE} ${LINALG_HPP_SOURCE} ${CPP_SOURCE} ${TPP_SOURCE} ${LINALG_TPP_SOURCE}

BIN_MAIN  := bin/main.x
BIN_DEBUG := bin/debug.x





#===============================================================================
# Target Definitions
#===============================================================================

.PHONY: build
build: ${BIN_MAIN}
	cp ${BIN_MAIN} edgi

${BIN_MAIN}: ${ALL_SOURCE}
	${CXX} ${PROD} ${FLAGS} -o ${BIN_MAIN} ${CPP_SOURCE} ${LIBS}

.PHONY: debug
debug: ${BIN_DEBUG}
	cp ${BIN_DEBUG} edgi_debug

${BIN_DEBUG}: ${ALL_SOURCE}
	${CXX} ${DB} ${FLAGS} -o ${BIN_DEBUG} ${CPP_SOURCE} ${LIBS}

.PHONY: clean
clean:
	rm -f bin/*.x bin/*.o edgi edgi_debug

.PHONY: load
load:
	@echo ''
	@echo 'This makefile includes recipes for four builds using the Intel compiler.'
	@echo ''
	@echo 'Requirements:'
	@echo '    Intel compiler supporting C++11'
	@echo '    Intel MKL library'
	@echo '    NetCDF library compiled with Intel'
	@echo '    FFTW library compiled with Intel'
	@echo '    (Optional) Plasma linear algebra library (must be version 2.8.0)'
	@echo ''
	@echo 'Builds:'
	@echo '    make build -> production mode with MKL'
	@echo '    make debug -> debug mode with MKL'
	@echo '    make with_plasma=1 build -> production mode with PLASMA'
	@echo '    make with_plasma=1 debug -> debug mode with PLASMA'
	@echo ''

